// Customize this file for your project as needed
/////////////////////////////////////////////////

// If you rename your packages, feel free to rename this..
mainClassName = ext.serviceClassName

buildscript {
  ext {
    springBootVersion = '1.2.3.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
  }
}

//Spring boot plugin.
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

jar {
  baseName = 'microservice-demo'
  version = '1.0.0-SNAPSHOT'
}

repositories {
  mavenCentral()
}

/*dependencies {

  compile 'org.springframework.boot:spring-boot-starter-web:1.2.3.RELEASE'
}*/

dependencies {
  compile project(':microservicedemo-api')
  compile 'org.springframework.boot:spring-boot-starter-hateoas'
  //compile 'org.springframework.boot:spring-boot-starter-jetty:1.2.3.RELEASE'
  compile 'org.springframework.boot:spring-boot-starter-data-rest:1.2.3.RELEASE'
  compile 'org.springframework.boot:spring-boot-starter-tomcat:1.2.3.RELEASE'
  compile 'org.springframework.boot:spring-boot-starter-parent:1.2.3.RELEASE'
  compile 'org.springframework.boot:spring-boot-starter-actuator:1.2.3.RELEASE'

  //JPA.
  compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.2.4.RELEASE'
  compile 'com.h2database:h2:1.4.187'

  //Testing.
  testCompile project(':microservicedemo-client')
  testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
  classpath {
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
  }
}
